{% assign block_settings = block.settings %}
{%- assign block_index = section.blocks | find_index: 'id', block.id -%}
{%- assign section_index = section.index -%}

{%- if block_settings.title != blank and block_settings.rich_text != blank -%}

{% liquid
  assign tab_id = 'tab-' | append: section.id | append: '-' | append: block_index | plus: 1
  assign panel_id = 'panel-' | append: section.id | append: '-' | append: block_index | plus: 1
  assign is_active = false

  assign first_active_found = false
  for section_block in section.blocks
    if section_block.settings.active_by_default and first_active_found == false
      if section_block.id == block.id
        assign is_active = true
      endif
      assign first_active_found = true
      break
    endif
  endfor

  if first_active_found == false and block_index == 0
    assign is_active = true
  endif
%}

<div class="tabbed-content__tab-block" data-tab-index="{{ block_index }}">
  <!-- Tab Button (will be moved to tablist by JavaScript) -->
  <button
    role="tab"
    id="{{ tab_id }}"
    aria-controls="{{ panel_id }}"
    aria-selected="{{ is_active }}"
    tabindex="{% if is_active %}0{% else %}-1{% endif %}"
    class="tabbed-content__tab{% if is_active %} tabbed-content__tab--active{% endif %}"
    data-tab-button
    {{ block.shopify_attributes }}
  >
    <div class="tab-border">
    {{ block_settings.title | default: 'Tab' }}
    </div>
  </button>

  <!-- Tab Panel (will be moved to panels container by JavaScript) -->
  <div
    role="tabpanel"
    id="{{ panel_id }}"
    aria-labelledby="{{ tab_id }}"
    class="tabbed-content__panel{% if is_active %} tabbed-content__panel--active{% endif %}"
    {% unless is_active %}hidden{% endunless %}
    data-tab-panel
  >
    <div
      class="tab__content{% if block_settings.inherit_color_scheme == false %} color-{{ block_settings.color_scheme }}{% endif %}"
    >
      <div class="tab__content-inner">
        {{ block_settings.rich_text }}
      </div>
    </div>
  </div>
</div>

{%- endif -%}

{% stylesheet %}
  .tabbed-content__tab-block {
    display: none;
  }

  .tab__content {
    width: 100%;
  }

  .tab__content-inner {
    display: flex;
    flex-direction: column;
    gap: var(--padding-sm);
  }

  .tab__content.background-transparent {
    background-color: transparent;
  }
{% endstylesheet %}

{% schema %}
{
  "name": "t:names.tab",
  "tag": null,
  "settings": [
    {
      "type": "text",
      "id": "title",
      "label": "t:settings.tab_title",
      "default": "Tab"
    },
    {
      "type": "richtext",
      "id": "rich_text",
      "label": "Content",
      "default": "<p>Enter your tab content here.</p>"
    },
    {
      "type": "checkbox",
      "id": "active_by_default",
      "label": "t:settings.active_by_default",
      "default": false,
      "info": "t:info.only_first_active_tab_will_be_used"
    },
    {
      "type": "header",
      "content": "t:content.appearance"
    },
    {
      "type": "checkbox",
      "id": "inherit_color_scheme",
      "label": "t:settings.inherit_color_scheme",
      "default": true
    },
    {
      "type": "color_scheme",
      "id": "color_scheme",
      "label": "t:settings.color_scheme",
      "default": "scheme-1",
      "visible_if": "{{ block.settings.inherit_color_scheme == false }}"
    }
  ],
  "presets": [
    {
      "name": "t:names.tab",
      "settings": {
        "title": "Tab"
      },
    }
  ]
}
{% endschema %}